import os

def print_board(board):
    """
    Prints the Tic-Tac-Toe board.
    """
    os.system('clear')  # Clear the console on Unix-based systems
    print("Tic-Tac-Toe\n")
    for row in board:
        print(" ".join(row))

def get_move(board, player):
    """
    Get the next move from the player.
    """
    valid_move = False
    while not valid_move:
        move = input(f"Player {player}, enter your move (row, col): ")
        try:
            row, col = map(int, move.split(','))
            row -= 1
            col -= 1
            if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
                board[row][col] = player
                valid_move = True
            else:
                print("Invalid move. Try again.")
        except ValueError:
            print("Invalid input. Try again.")
    return board

def check_winner(board, player):
    """
    Check if the player has won the game.
    """
    # Check rows
    for row in board:
        if row.count(player) == 3:
            return True

    # Check columns
    for col in range(3):
        if board[0][col] == player and board[1][col] == player and board[2][col] == player:
            return True

    # Check diagonals
    if board[0][0] == player and board[1][1] == player and board[2][2] == player:
        return True
    if board[0][2] == player and board[1][1] == player and board[2][0] == player:
        return True

    return False

def play_game():
    """
    Main function to play the Tic-Tac-Toe game.
    """
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    current_player = 0

    while True:
        print_board(board)
        board = get_move(board, players[current_player])

        if check_winner(board, players[current_player]):
            print_board(board)
            print(f"Player {players[current_player]} wins!")
            break

        if ' ' not in sum(board, []):
            print_board(board)
            print("It's a tie!")
            break

        current_player = (current_player + 1) % 2

if __name__ == "__main__":
    play_game()
